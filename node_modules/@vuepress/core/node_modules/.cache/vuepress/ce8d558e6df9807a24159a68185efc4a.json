{"remainingRequest":"/root/myASUS/blog/asd/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/myASUS/blog/asd/blog/layouts/Layout.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/root/myASUS/blog/asd/blog/layouts/Layout.vue","mtime":1652193550718},{"path":"/root/myASUS/blog/asd/blog/node_modules/css-loader/dist/cjs.js","mtime":1651554607315},{"path":"/root/myASUS/blog/asd/blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1651554614190},{"path":"/root/myASUS/blog/asd/blog/node_modules/postcss-loader/src/index.js","mtime":1651554609257},{"path":"/root/myASUS/blog/asd/blog/node_modules/stylus-loader/index.js","mtime":1651554603356},{"path":"/root/myASUS/blog/asd/blog/node_modules/cache-loader/dist/cjs.js","mtime":1651554606967},{"path":"/root/myASUS/blog/asd/blog/node_modules/vue-loader/lib/index.js","mtime":1651554614190}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQHJlcXVpcmUgJy4uL3N0eWxlcy9tb2JpbGUnCkByZXF1aXJlICcuLi9zdHlsZXMvY29sb3Jfc2NoZW1lJwo="},{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA","file":"Layout.vue","sourceRoot":"layouts","sourcesContent":["<template>\n  <div\n    class=\"theme-container\"\n    :class=\"pageClasses\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\"\n  >\n    <SideBar/>\n    <div class=\"theme-main\">\n      <slot name=\"main\">\n        <Home v-if=\"$page.pageType === 'home'\" />\n        <Archive v-else-if=\"$page.pageType === 'archive'\" />\n        <Category v-else-if=\"$page.pageType === 'category'\" />\n        <CategoryItem v-else-if=\"$page.pageType === 'categoryItem'\" />\n        <Tag v-else-if=\"$page.pageType === 'tag'\" />\n        <TagItem v-else-if=\"$page.pageType === 'tagItem'\" />\n        <FriendLink v-else-if=\"$page.pageType === 'friendLink'\" />\n        <Post v-else></Post>\n      </slot> \n    </div>\n    <SvgSprite/>\n  </div>\n</template>\n\n<script>\nimport Home from '@theme/components/Home.vue'\nimport Archive from '@theme/components/Archive.vue'\nimport Category from '@theme/components/Category.vue'\nimport Tag from '@theme/components/Tag.vue'\nimport CategoryItem from '@theme/components/CategoryItem.vue'\nimport TagItem from '@theme/components/TagItem.vue'\nimport Post from '@theme/components/Post.vue'\nimport FriendLink from '@theme/components/FriendLink.vue'\nimport SideBar from '@theme/components/SideBar.vue'\nimport SvgSprite from '@theme/components/SvgSprite.vue'\nimport { resolveSidebarItems } from '../util'\nexport default {\n  name: 'Layout',\n  components: {\n    Home,\n    Archive,\n    Category,\n    Tag,\n    CategoryItem,\n    TagItem,\n    Post,\n    SideBar,\n    FriendLink,\n    SvgSprite\n  },\n  data () {\n    return {\n      isSidebarOpen: false\n    }\n  },\n  computed: {\n    shouldShowNavbar () {\n      const { themeConfig } = this.$site\n      const { frontmatter } = this.$page\n      if (\n        frontmatter.navbar === false\n        || themeConfig.navbar === false) {\n        return false\n      }\n      return (\n        this.$title\n        || themeConfig.logo\n        || themeConfig.repo\n        || themeConfig.nav\n        || this.$themeLocaleConfig.nav\n      )\n    },\n    shouldShowSidebar () {\n      const { frontmatter } = this.$page\n      return (\n        !frontmatter.home\n        && frontmatter.sidebar !== false\n        && this.sidebarItems.length\n      )\n    },\n    sidebarItems () {\n      return resolveSidebarItems(\n        this.$page,\n        this.$page.regularPath,\n        this.$site,\n        this.$localePath\n      )\n    },\n    pageClasses () {\n      const userPageClass = this.$page.frontmatter.pageClass\n      return [\n        {\n          'no-navbar': !this.shouldShowNavbar,\n          'sidebar-open': this.isSidebarOpen\n        },\n        userPageClass\n      ]\n    }\n  },\n  mounted () {\n    this.$eventBus.$on('EV_TOGGLE_SIDE_BAR', () => {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    })\n    this.$router.afterEach(() => {\n      this.isSidebarOpen = false\n      this.$eventBus.$emit('EV_TOGGLE_SEARCH', false)\n    })\n  },\n  methods: {\n    toggleSidebar (to) {\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen\n      this.$emit('toggle-sidebar', this.isSidebarOpen)\n    },\n    // side swipe\n    onTouchStart (e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      }\n    },\n    onTouchEnd (e) {\n      const dx = e.changedTouches[0].clientX - this.touchStart.x\n      const dy = e.changedTouches[0].clientY - this.touchStart.y\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true)\n        } else {\n          this.toggleSidebar(false)\n        }\n      }\n    }\n  }\n}\n</script>\n<style lang=\"stylus\">\n@require '../styles/mobile'\n@require '../styles/color_scheme'\n</style>"]}]}